@*
System to list homepage service nodes and article nodes
Build: Adam Duncan 2012
*@
@using SportsAgronomyServices.Extensions;
@{
	var servicesNode = Model.NodeById(Constants.servicesRootId);
	var newsNode = Model.NodeById(Constants.newsRootId);
	var caseStudiesNode = Model.NodeById(Constants.caseStudiesRootId);
	var techNode = Model.NodeById(Constants.techRootId);

	var newsNodeSet = newsNode.Descendants().Where("visible && level>2").OrderBy("articleDate desc");
	var caseStudiesNodeSet = caseStudiesNode.Descendants().Where("visible && level>2").OrderBy("articleDate desc");
	var techNodeSet = techNode.Descendants().Where("visible && level>2").OrderBy("articleDate desc");

}
@* Services *@
<div class="left">
	<ul class="list_blocks list_reset col_layout">
		@foreach (var item in servicesNode.Children.Where("visible"))
  {
			<li class="grid_2"><a href="@item.Url">
				<span class="image">@RazorHelpers.WriteImage(item.GetProperty("pageImages").Value.Split(',')[0], "", 137, 94)
					<span class="overlay">
						<!--overlay-->
					</span>
					<span class="title vc">@item.Name</span>
				</span>
				<span class="dark">@item.serviceStrapline</span>
			</a></li>
  }
	</ul>
</div>
@* Feature news *@
<div class="grid_5">
	<ul class="list_blocks list_reset">
		@foreach (var item in newsNodeSet)
  {
	  if (@item.Index() == 0)
	  {
			<li class="margin_r_0"><a href="@item.Url">
				<span class="image">@RazorHelpers.WriteImage(item.GetProperty("pageImages").Value.Split(',')[0], "", 374, 257)
				</span>
				@{
		  var itemName = (!String.IsNullOrEmpty(item.alternativeTitle)) ? @item.alternativeTitle : @item.Name;
		  var itemType = @item.AncestorOrSelf("ArticleListingPage").Name;
				}
				<span class="dark">
					@itemType
				</span>
				@RazorHelpers.Truncate(itemName, 80)
			</a></li>
	  }
  }
	</ul>
</div>
@* Additional stories *@
<div class="left">
	<ul class="list_blocks list_reset col_layout">
		@foreach (var item in newsNodeSet)
  {
	  if (@item.Index() >= 1 && @item.Index() < @Model.newsArticlesToDisplay)
	  {
			<li class="grid_2"><a href="@item.Url">
				<span class="image">@RazorHelpers.WriteImage(item.GetProperty("pageImages").Value.Split(',')[0], "", 137, 94)
				</span>
				@{
		  var itemName = (!String.IsNullOrEmpty(item.alternativeTitle)) ? @item.alternativeTitle : @item.Name;
		  var itemType = @item.AncestorOrSelf("ArticleListingPage").Name;
				}
				<span class="dark">
					@itemType
				</span>
				@RazorHelpers.Truncate(itemName, 45)
			</a></li>
	  }
  }
		@foreach (var item in caseStudiesNodeSet)
  {
	  if (@item.Index() < @Model.caseStudiesToDisplay)
	  {
			<li class="grid_2"><a href="@item.Url">
				<span class="image">@RazorHelpers.WriteImage(item.GetProperty("pageImages").Value.Split(',')[0], "", 137, 94)
				</span>
				@{
		  var itemName = (!String.IsNullOrEmpty(item.alternativeTitle)) ? @item.alternativeTitle : @item.Name;
		  var itemType = @item.AncestorOrSelf("ArticleListingPage").Name;
				}
				<span class="dark">
					@itemType
				</span>
				@RazorHelpers.Truncate(itemName, 45)
			</a></li>
	  }
  }
		@foreach (var item in techNodeSet)
  {
	  if (@item.Index() < @Model.techArticlesToDisplay)
	  {
			<li class="grid_2"><a href="@item.Url">
				<span class="image">@RazorHelpers.WriteImage(item.GetProperty("pageImages").Value.Split(',')[0], "", 137, 94)
				</span>
				@{
		  var itemName = (!String.IsNullOrEmpty(item.alternativeTitle)) ? @item.alternativeTitle : @item.Name;
		  var itemType = @item.AncestorOrSelf("ArticleListingPage").Name;
				}
				<span class="dark">
					@itemType
				</span>
				@RazorHelpers.Truncate(itemName, 45)
			</a></li>
	  }
  }
	</ul>
</div>
